{"ast":null,"code":"var _jsxFileName = \"/home/abel/Desktop/practice/chat/two-factor-authentication-master/two-factor-auth-client/src/verifycode/VerifyCode.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Form, Input, Button, notification } from \"antd\";\nimport { DingtalkOutlined } from \"@ant-design/icons\";\nimport { verify } from \"../util/ApiUtil\";\nimport \"./VerifyCode.css\";\n\nconst VerifyCode = props => {\n  const [loading, setLoading] = useState(false);\n\n  const onFinish = values => {\n    setLoading(true);\n    const verifyRequest = {\n      code: values.code,\n      username: props.location.state.username\n    };\n    console.log(verifyRequest);\n    verify(verifyRequest).then(response => {\n      localStorage.setItem(\"accessToken\", response.accessToken);\n      props.history.push(\"/\");\n      setLoading(false);\n    }).catch(error => {\n      if (error.status === 400) {\n        notification.error({\n          message: \"Error\",\n          description: \"Code is incorrect\"\n        });\n      } else {\n        notification.error({\n          message: \"Error\",\n          description: \"Sorry! Something went wrong. Please try again!\"\n        });\n      }\n\n      setLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DingtalkOutlined, {\n    style: {\n      fontSize: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    name: \"normal_login\",\n    className: \"login-form\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"code\",\n    rules: [{\n      required: true,\n      message: \"Code is required\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    size: \"large\",\n    placeholder: \"Enter code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => props.history.push(\"/\"),\n    shape: \"round\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    shape: \"round\",\n    size: \"large\",\n    htmlType: \"submit\",\n    className: \"verify-form-button \",\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Verify\"))));\n};\n\nexport default VerifyCode;","map":{"version":3,"sources":["/home/abel/Desktop/practice/chat/two-factor-authentication-master/two-factor-auth-client/src/verifycode/VerifyCode.js"],"names":["React","useEffect","useState","Form","Input","Button","notification","DingtalkOutlined","verify","VerifyCode","props","loading","setLoading","onFinish","values","verifyRequest","code","username","location","state","console","log","then","response","localStorage","setItem","accessToken","history","push","catch","error","status","message","description","fontSize","remember","required"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Form, Input, Button, notification } from \"antd\";\nimport { DingtalkOutlined } from \"@ant-design/icons\";\nimport { verify } from \"../util/ApiUtil\";\nimport \"./VerifyCode.css\";\n\nconst VerifyCode = (props) => {\n  const [loading, setLoading] = useState(false);\n\n  const onFinish = (values) => {\n    setLoading(true);\n\n    const verifyRequest = {\n      code: values.code,\n      username: props.location.state.username,\n    };\n\n    console.log(verifyRequest);\n    verify(verifyRequest)\n      .then((response) => {\n        localStorage.setItem(\"accessToken\", response.accessToken);\n        props.history.push(\"/\");\n        setLoading(false);\n      })\n      .catch((error) => {\n        if (error.status === 400) {\n          notification.error({\n            message: \"Error\",\n            description: \"Code is incorrect\",\n          });\n        } else {\n          notification.error({\n            message: \"Error\",\n            description: \"Sorry! Something went wrong. Please try again!\",\n          });\n        }\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div className=\"login-container\">\n      <DingtalkOutlined style={{ fontSize: 50 }} />\n      <Form\n        name=\"normal_login\"\n        className=\"login-form\"\n        initialValues={{ remember: true }}\n        onFinish={onFinish}\n      >\n        <Form.Item\n          name=\"code\"\n          rules={[{ required: true, message: \"Code is required\" }]}\n        >\n          <Input size=\"large\" placeholder=\"Enter code\" />\n        </Form.Item>\n        <Form.Item>\n          <Button\n            onClick={() => props.history.push(\"/\")}\n            shape=\"round\"\n            size=\"large\"\n          >\n            Cancel\n          </Button>\n          <Button\n            shape=\"round\"\n            size=\"large\"\n            htmlType=\"submit\"\n            className=\"verify-form-button \"\n            loading={loading}\n          >\n            Verify\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default VerifyCode;\n"]},"metadata":{},"sourceType":"module"}