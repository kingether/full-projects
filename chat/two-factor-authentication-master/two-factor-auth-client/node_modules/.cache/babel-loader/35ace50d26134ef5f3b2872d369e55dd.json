{"ast":null,"code":"var _jsxFileName = \"/home/abel/Desktop/practice/chat/two-factor-authentication-master/two-factor-auth-client/src/signup/Signup.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Form, Input, Button, notification, Checkbox } from \"antd\";\nimport { Redirect } from \"react-router-dom\";\nimport { DingtalkOutlined } from \"@ant-design/icons\";\nimport { signup } from \"../util/ApiUtil\";\nimport \"./Signup.css\";\n\nconst Signup = props => {\n  const [loading, setLoading] = useState(false);\n  const [redirect, setRedirect] = useState();\n  const [qrImageUrl, setQrImageUrl] = useState();\n  useEffect(() => {\n    if (localStorage.getItem(\"accessToken\") !== null) {\n      props.history.push(\"/\");\n    }\n  }, []);\n\n  const onFinish = values => {\n    setLoading(true);\n    signup(values).then(response => {\n      notification.success({\n        message: \"Success\",\n        description: \"Thank you! You're successfully registered. Please Login to continue!\"\n      });\n\n      if (response.mfa) {\n        console.log(response);\n        setQrImageUrl(response.secretImageUri);\n        setRedirect(\"/qrcode\");\n      } else {\n        setRedirect(\"/\");\n      }\n\n      setLoading(false);\n    }).catch(error => {\n      notification.error({\n        message: \"Error\",\n        description: error.message || \"Sorry! Something went wrong. Please try again!\"\n      });\n      setLoading(false);\n    });\n  };\n\n  if (redirect) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: redirect,\n        state: {\n          imageUrl: qrImageUrl\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DingtalkOutlined, {\n    style: {\n      fontSize: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    name: \"normal_login\",\n    className: \"login-form\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"name\",\n    rules: [{\n      required: true,\n      message: \"Please input your name!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    size: \"large\",\n    placeholder: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"username\",\n    rules: [{\n      required: true,\n      message: \"Please input your Username!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    size: \"large\",\n    placeholder: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"email\",\n    rules: [{\n      required: true,\n      message: \"Please input your email!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    size: \"large\",\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: \"Please input your Password!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    size: \"large\",\n    type: \"password\",\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"mfa\",\n    valuePropName: \"checked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Enable two-factor authentication\")), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    shape: \"round\",\n    size: \"large\",\n    htmlType: \"submit\",\n    className: \"login-form-button\",\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Signup\")), \"Already a member? \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 27\n    }\n  }, \"Log in\")));\n};\n\nexport default Signup;","map":{"version":3,"sources":["/home/abel/Desktop/practice/chat/two-factor-authentication-master/two-factor-auth-client/src/signup/Signup.js"],"names":["React","useEffect","useState","Form","Input","Button","notification","Checkbox","Redirect","DingtalkOutlined","signup","Signup","props","loading","setLoading","redirect","setRedirect","qrImageUrl","setQrImageUrl","localStorage","getItem","history","push","onFinish","values","then","response","success","message","description","mfa","console","log","secretImageUri","catch","error","pathname","state","imageUrl","fontSize","remember","required"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Form, Input, Button, notification, Checkbox } from \"antd\";\nimport { Redirect } from \"react-router-dom\";\nimport { DingtalkOutlined } from \"@ant-design/icons\";\nimport { signup } from \"../util/ApiUtil\";\nimport \"./Signup.css\";\n\nconst Signup = (props) => {\n  const [loading, setLoading] = useState(false);\n  const [redirect, setRedirect] = useState();\n  const [qrImageUrl, setQrImageUrl] = useState();\n\n  useEffect(() => {\n    if (localStorage.getItem(\"accessToken\") !== null) {\n      props.history.push(\"/\");\n    }\n  }, []);\n\n  const onFinish = (values) => {\n    setLoading(true);\n    signup(values)\n      .then((response) => {\n        notification.success({\n          message: \"Success\",\n          description:\n            \"Thank you! You're successfully registered. Please Login to continue!\",\n        });\n        if (response.mfa) {\n          console.log(response);\n          setQrImageUrl(response.secretImageUri);\n          setRedirect(\"/qrcode\");\n        } else {\n          setRedirect(\"/\");\n        }\n\n        setLoading(false);\n      })\n      .catch((error) => {\n        notification.error({\n          message: \"Error\",\n          description:\n            error.message || \"Sorry! Something went wrong. Please try again!\",\n        });\n        setLoading(false);\n      });\n  };\n\n  if (redirect) {\n    return (\n      <Redirect to={{ pathname: redirect, state: { imageUrl: qrImageUrl } }} />\n    );\n  }\n\n  return (\n    <div className=\"login-container\">\n      <DingtalkOutlined style={{ fontSize: 50 }} />\n      <Form\n        name=\"normal_login\"\n        className=\"login-form\"\n        initialValues={{ remember: true }}\n        onFinish={onFinish}\n      >\n        <Form.Item\n          name=\"name\"\n          rules={[{ required: true, message: \"Please input your name!\" }]}\n        >\n          <Input size=\"large\" placeholder=\"Name\" />\n        </Form.Item>\n        <Form.Item\n          name=\"username\"\n          rules={[{ required: true, message: \"Please input your Username!\" }]}\n        >\n          <Input size=\"large\" placeholder=\"Username\" />\n        </Form.Item>\n        <Form.Item\n          name=\"email\"\n          rules={[{ required: true, message: \"Please input your email!\" }]}\n        >\n          <Input size=\"large\" placeholder=\"Email\" />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          rules={[{ required: true, message: \"Please input your Password!\" }]}\n        >\n          <Input size=\"large\" type=\"password\" placeholder=\"Password\" />\n        </Form.Item>\n        <Form.Item name=\"mfa\" valuePropName=\"checked\">\n          <Checkbox>Enable two-factor authentication</Checkbox>\n        </Form.Item>\n        <Form.Item>\n          <Button\n            shape=\"round\"\n            size=\"large\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n            loading={loading}\n          >\n            Signup\n          </Button>\n        </Form.Item>\n        Already a member? <a href=\"/login\">Log in</a>\n      </Form>\n    </div>\n  );\n};\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}