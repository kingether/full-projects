{"ast":null,"code":"const request = options => {\n  const headers = new Headers();\n\n  if (options.setContentType !== false) {\n    headers.append(\"Content-Type\", \"application/json\");\n  }\n\n  if (localStorage.getItem(\"accessToken\")) {\n    headers.append(\"Authorization\", \"Bearer \" + localStorage.getItem(\"accessToken\"));\n  }\n\n  const defaults = {\n    headers: headers\n  };\n  options = Object.assign({}, defaults, options);\n  return fetch(options.url, options).then(response => response.json().then(json => {\n    if (!response.ok) {\n      return Promise.reject(json);\n    }\n\n    return json;\n  }));\n};\n\nexport function login(loginRequest) {\n  return request({\n    url: \"http://localhost:8081/signin\",\n    method: \"POST\",\n    body: JSON.stringify(loginRequest)\n  });\n}\nexport function verify(verifyRequest) {\n  return request({\n    url: \"http://localhost:8081/verify\",\n    method: \"POST\",\n    body: JSON.stringify(verifyRequest)\n  });\n}\nexport function signup(signupRequest) {\n  return request({\n    url: \"http://localhost:8081/users\",\n    method: \"POST\",\n    body: JSON.stringify(signupRequest)\n  });\n}\nexport function getCurrentUser() {\n  if (!localStorage.getItem(\"accessToken\")) {\n    return Promise.reject(\"No access token set.\");\n  }\n\n  return request({\n    url: \"http://localhost:8081/users/me\",\n    method: \"GET\"\n  });\n}","map":{"version":3,"sources":["/home/abel/Desktop/practice/chat/two-factor-authentication-master/two-factor-auth-client/src/util/ApiUtil.js"],"names":["request","options","headers","Headers","setContentType","append","localStorage","getItem","defaults","Object","assign","fetch","url","then","response","json","ok","Promise","reject","login","loginRequest","method","body","JSON","stringify","verify","verifyRequest","signup","signupRequest","getCurrentUser"],"mappings":"AAAA,MAAMA,OAAO,GAAIC,OAAD,IAAa;AAC3B,QAAMC,OAAO,GAAG,IAAIC,OAAJ,EAAhB;;AAEA,MAAIF,OAAO,CAACG,cAAR,KAA2B,KAA/B,EAAsC;AACpCF,IAAAA,OAAO,CAACG,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AACD;;AAED,MAAIC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAJ,EAAyC;AACvCL,IAAAA,OAAO,CAACG,MAAR,CACE,eADF,EAEE,YAAYC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAFd;AAID;;AAED,QAAMC,QAAQ,GAAG;AAAEN,IAAAA,OAAO,EAAEA;AAAX,GAAjB;AACAD,EAAAA,OAAO,GAAGQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,QAAlB,EAA4BP,OAA5B,CAAV;AAEA,SAAOU,KAAK,CAACV,OAAO,CAACW,GAAT,EAAcX,OAAd,CAAL,CAA4BY,IAA5B,CAAkCC,QAAD,IACtCA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBE,IAAD,IAAU;AAC7B,QAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,aAAOC,OAAO,CAACC,MAAR,CAAeH,IAAf,CAAP;AACD;;AACD,WAAOA,IAAP;AACD,GALD,CADK,CAAP;AAQD,CAzBD;;AA2BA,OAAO,SAASI,KAAT,CAAeC,YAAf,EAA6B;AAClC,SAAOpB,OAAO,CAAC;AACbY,IAAAA,GAAG,EAAE,8BADQ;AAEbS,IAAAA,MAAM,EAAE,MAFK;AAGbC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,YAAf;AAHO,GAAD,CAAd;AAKD;AAED,OAAO,SAASK,MAAT,CAAgBC,aAAhB,EAA+B;AACpC,SAAO1B,OAAO,CAAC;AACbY,IAAAA,GAAG,EAAE,8BADQ;AAEbS,IAAAA,MAAM,EAAE,MAFK;AAGbC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeE,aAAf;AAHO,GAAD,CAAd;AAKD;AAED,OAAO,SAASC,MAAT,CAAgBC,aAAhB,EAA+B;AACpC,SAAO5B,OAAO,CAAC;AACbY,IAAAA,GAAG,EAAE,6BADQ;AAEbS,IAAAA,MAAM,EAAE,MAFK;AAGbC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeI,aAAf;AAHO,GAAD,CAAd;AAKD;AAED,OAAO,SAASC,cAAT,GAA0B;AAC/B,MAAI,CAACvB,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAL,EAA0C;AACxC,WAAOU,OAAO,CAACC,MAAR,CAAe,sBAAf,CAAP;AACD;;AAED,SAAOlB,OAAO,CAAC;AACbY,IAAAA,GAAG,EAAE,gCADQ;AAEbS,IAAAA,MAAM,EAAE;AAFK,GAAD,CAAd;AAID","sourcesContent":["const request = (options) => {\n  const headers = new Headers();\n\n  if (options.setContentType !== false) {\n    headers.append(\"Content-Type\", \"application/json\");\n  }\n\n  if (localStorage.getItem(\"accessToken\")) {\n    headers.append(\n      \"Authorization\",\n      \"Bearer \" + localStorage.getItem(\"accessToken\")\n    );\n  }\n\n  const defaults = { headers: headers };\n  options = Object.assign({}, defaults, options);\n\n  return fetch(options.url, options).then((response) =>\n    response.json().then((json) => {\n      if (!response.ok) {\n        return Promise.reject(json);\n      }\n      return json;\n    })\n  );\n};\n\nexport function login(loginRequest) {\n  return request({\n    url: \"http://localhost:8081/signin\",\n    method: \"POST\",\n    body: JSON.stringify(loginRequest),\n  });\n}\n\nexport function verify(verifyRequest) {\n  return request({\n    url: \"http://localhost:8081/verify\",\n    method: \"POST\",\n    body: JSON.stringify(verifyRequest),\n  });\n}\n\nexport function signup(signupRequest) {\n  return request({\n    url: \"http://localhost:8081/users\",\n    method: \"POST\",\n    body: JSON.stringify(signupRequest),\n  });\n}\n\nexport function getCurrentUser() {\n  if (!localStorage.getItem(\"accessToken\")) {\n    return Promise.reject(\"No access token set.\");\n  }\n\n  return request({\n    url: \"http://localhost:8081/users/me\",\n    method: \"GET\",\n  });\n}\n"]},"metadata":{},"sourceType":"module"}