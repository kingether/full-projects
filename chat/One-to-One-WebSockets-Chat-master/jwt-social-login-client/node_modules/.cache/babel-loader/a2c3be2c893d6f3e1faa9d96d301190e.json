{"ast":null,"code":"import _slicedToArray from\"/home/abel/Desktop/practice/chat/One-to-One-WebSockets-Chat-master/jwt-social-login-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect}from\"react\";import{Card,Avatar}from\"antd\";import{useRecoilState}from\"recoil\";import{loggedInUser}from\"../atom/globalState\";import{LogoutOutlined}from\"@ant-design/icons\";import{getCurrentUser}from\"../util/ApiUtil\";import\"./Profile.css\";var Meta=Card.Meta;var Profile=function Profile(props){var _useRecoilState=useRecoilState(loggedInUser),_useRecoilState2=_slicedToArray(_useRecoilState,2),currentUser=_useRecoilState2[0],setLoggedInUser=_useRecoilState2[1];useEffect(function(){if(localStorage.getItem(\"accessToken\")===null){props.history.push(\"/login\");}loadCurrentUser();},[]);var loadCurrentUser=function loadCurrentUser(){getCurrentUser().then(function(response){setLoggedInUser(response);}).catch(function(error){console.log(error);});};var logout=function logout(){localStorage.removeItem(\"accessToken\");props.history.push(\"/login\");};return/*#__PURE__*/React.createElement(\"div\",{className:\"profile-container\"},/*#__PURE__*/React.createElement(Card,{style:{width:420,border:\"1px solid #e1e0e0\"},actions:[/*#__PURE__*/React.createElement(LogoutOutlined,{onClick:logout})]},/*#__PURE__*/React.createElement(Meta,{avatar:/*#__PURE__*/React.createElement(Avatar,{src:currentUser.profilePicture,className:\"user-avatar-circle\"}),title:currentUser.name,description:\"@\"+currentUser.username})));};export default Profile;","map":{"version":3,"sources":["/home/abel/Desktop/practice/chat/One-to-One-WebSockets-Chat-master/jwt-social-login-client/src/profile/Profile.js"],"names":["React","useEffect","Card","Avatar","useRecoilState","loggedInUser","LogoutOutlined","getCurrentUser","Meta","Profile","props","currentUser","setLoggedInUser","localStorage","getItem","history","push","loadCurrentUser","then","response","catch","error","console","log","logout","removeItem","width","border","profilePicture","name","username"],"mappings":"iNAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,IAAT,CAAeC,MAAf,KAA6B,MAA7B,CACA,OAASC,cAAT,KAA+B,QAA/B,CACA,OAASC,YAAT,KAA6B,qBAA7B,CACA,OAASC,cAAT,KAA+B,mBAA/B,CACA,OAASC,cAAT,KAA+B,iBAA/B,CACA,MAAO,eAAP,C,GAEQC,CAAAA,I,CAASN,I,CAATM,I,CAER,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,qBACcN,cAAc,CAACC,YAAD,CAD5B,oDAClBM,WADkB,qBACLC,eADK,qBAEzBX,SAAS,CAAC,UAAM,CACd,GAAIY,YAAY,CAACC,OAAb,CAAqB,aAArB,IAAwC,IAA5C,CAAkD,CAChDJ,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmB,QAAnB,EACD,CACDC,eAAe,GAChB,CALQ,CAKN,EALM,CAAT,CAOA,GAAMA,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5BV,cAAc,GACXW,IADH,CACQ,SAACC,QAAD,CAAc,CAClBP,eAAe,CAACO,QAAD,CAAf,CACD,CAHH,EAIGC,KAJH,CAIS,SAACC,KAAD,CAAW,CAChBC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACD,CANH,EAOD,CARD,CAUA,GAAMG,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnBX,YAAY,CAACY,UAAb,CAAwB,aAAxB,EACAf,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmB,QAAnB,EACD,CAHD,CAKA,mBACE,2BAAK,SAAS,CAAC,mBAAf,eACE,oBAAC,IAAD,EACE,KAAK,CAAE,CAAEU,KAAK,CAAE,GAAT,CAAcC,MAAM,CAAE,mBAAtB,CADT,CAEE,OAAO,CAAE,cAAC,oBAAC,cAAD,EAAgB,OAAO,CAAEH,MAAzB,EAAD,CAFX,eAIE,oBAAC,IAAD,EACE,MAAM,cACJ,oBAAC,MAAD,EACE,GAAG,CAAEb,WAAW,CAACiB,cADnB,CAEE,SAAS,CAAC,oBAFZ,EAFJ,CAOE,KAAK,CAAEjB,WAAW,CAACkB,IAPrB,CAQE,WAAW,CAAE,IAAMlB,WAAW,CAACmB,QARjC,EAJF,CADF,CADF,CAmBD,CA3CD,CA6CA,cAAerB,CAAAA,OAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Card, Avatar } from \"antd\";\nimport { useRecoilState } from \"recoil\";\nimport { loggedInUser } from \"../atom/globalState\";\nimport { LogoutOutlined } from \"@ant-design/icons\";\nimport { getCurrentUser } from \"../util/ApiUtil\";\nimport \"./Profile.css\";\n\nconst { Meta } = Card;\n\nconst Profile = (props) => {\n  const [currentUser, setLoggedInUser] = useRecoilState(loggedInUser);\n  useEffect(() => {\n    if (localStorage.getItem(\"accessToken\") === null) {\n      props.history.push(\"/login\");\n    }\n    loadCurrentUser();\n  }, []);\n\n  const loadCurrentUser = () => {\n    getCurrentUser()\n      .then((response) => {\n        setLoggedInUser(response);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"accessToken\");\n    props.history.push(\"/login\");\n  };\n\n  return (\n    <div className=\"profile-container\">\n      <Card\n        style={{ width: 420, border: \"1px solid #e1e0e0\" }}\n        actions={[<LogoutOutlined onClick={logout} />]}\n      >\n        <Meta\n          avatar={\n            <Avatar\n              src={currentUser.profilePicture}\n              className=\"user-avatar-circle\"\n            />\n          }\n          title={currentUser.name}\n          description={\"@\" + currentUser.username}\n        />\n      </Card>\n    </div>\n  );\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}