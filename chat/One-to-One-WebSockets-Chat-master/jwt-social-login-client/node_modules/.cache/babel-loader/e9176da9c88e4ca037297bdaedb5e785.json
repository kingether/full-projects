{"ast":null,"code":"import _toConsumableArray from\"/home/abel/Desktop/practice/chat/One-to-One-WebSockets-Chat-master/jwt-social-login-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/abel/Desktop/practice/chat/One-to-One-WebSockets-Chat-master/jwt-social-login-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{Button,message}from\"antd\";import{getUsers,countNewMessages,findChatMessages,findChatMessage}from\"../util/ApiUtil\";import{useRecoilValue,useRecoilState}from\"recoil\";import{loggedInUser,chatActiveContact,chatMessages}from\"../atom/globalState\";import ScrollToBottom from\"react-scroll-to-bottom\";import\"./Chat.css\";var stompClient=null;var Chat=function Chat(props){var currentUser=useRecoilValue(loggedInUser);var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),contacts=_useState4[0],setContacts=_useState4[1];var _useRecoilState=useRecoilState(chatActiveContact),_useRecoilState2=_slicedToArray(_useRecoilState,2),activeContact=_useRecoilState2[0],setActiveContact=_useRecoilState2[1];var _useRecoilState3=useRecoilState(chatMessages),_useRecoilState4=_slicedToArray(_useRecoilState3,2),messages=_useRecoilState4[0],setMessages=_useRecoilState4[1];useEffect(function(){if(localStorage.getItem(\"accessToken\")===null){props.history.push(\"/login\");}connect();loadContacts();},[]);useEffect(function(){if(activeContact===undefined)return;findChatMessages(activeContact.id,currentUser.id).then(function(msgs){return setMessages(msgs);});loadContacts();},[activeContact]);var connect=function connect(){var Stomp=require(\"stompjs\");var SockJS=require(\"sockjs-client\");SockJS=new SockJS(\"http://localhost:8080/ws\");stompClient=Stomp.over(SockJS);stompClient.connect({},onConnected,onError);};var onConnected=function onConnected(){console.log(\"connected\");console.log(currentUser);stompClient.subscribe(\"/user/\"+currentUser.id+\"/queue/messages\",onMessageReceived);};var onError=function onError(err){console.log(err);};var onMessageReceived=function onMessageReceived(msg){var notification=JSON.parse(msg.body);var active=JSON.parse(sessionStorage.getItem(\"recoil-persist\")).chatActiveContact;if(active.id===notification.senderId){findChatMessage(notification.id).then(function(message){var newMessages=JSON.parse(sessionStorage.getItem(\"recoil-persist\")).chatMessages;newMessages.push(message);setMessages(newMessages);});}else{message.info(\"Received a new message from \"+notification.senderName);}loadContacts();};var sendMessage=function sendMessage(msg){if(msg.trim()!==\"\"){var _message={senderId:currentUser.id,recipientId:activeContact.id,senderName:currentUser.name,recipientName:activeContact.name,content:msg,timestamp:new Date()};stompClient.send(\"/app/chat\",{},JSON.stringify(_message));var newMessages=_toConsumableArray(messages);newMessages.push(_message);setMessages(newMessages);}};var loadContacts=function loadContacts(){var promise=getUsers().then(function(users){return users.map(function(contact){return countNewMessages(contact.id,currentUser.id).then(function(count){contact.newMessages=count;return contact;});});});promise.then(function(promises){return Promise.all(promises).then(function(users){setContacts(users);if(activeContact===undefined&&users.length>0){setActiveContact(users[0]);}});});};return/*#__PURE__*/React.createElement(\"div\",{id:\"frame\"},/*#__PURE__*/React.createElement(\"div\",{id:\"sidepanel\"},/*#__PURE__*/React.createElement(\"div\",{id:\"profile\"},/*#__PURE__*/React.createElement(\"div\",{class:\"wrap\"},/*#__PURE__*/React.createElement(\"img\",{id:\"profile-img\",src:currentUser.profilePicture,class:\"online\",alt:\"\"}),/*#__PURE__*/React.createElement(\"p\",null,currentUser.name),/*#__PURE__*/React.createElement(\"div\",{id:\"status-options\"},/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",{id:\"status-online\",class:\"active\"},/*#__PURE__*/React.createElement(\"span\",{class:\"status-circle\"}),\" \",/*#__PURE__*/React.createElement(\"p\",null,\"Online\")),/*#__PURE__*/React.createElement(\"li\",{id:\"status-away\"},/*#__PURE__*/React.createElement(\"span\",{class:\"status-circle\"}),\" \",/*#__PURE__*/React.createElement(\"p\",null,\"Away\")),/*#__PURE__*/React.createElement(\"li\",{id:\"status-busy\"},/*#__PURE__*/React.createElement(\"span\",{class:\"status-circle\"}),\" \",/*#__PURE__*/React.createElement(\"p\",null,\"Busy\")),/*#__PURE__*/React.createElement(\"li\",{id:\"status-offline\"},/*#__PURE__*/React.createElement(\"span\",{class:\"status-circle\"}),\" \",/*#__PURE__*/React.createElement(\"p\",null,\"Offline\")))))),/*#__PURE__*/React.createElement(\"div\",{id:\"search\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"contacts\"},/*#__PURE__*/React.createElement(\"ul\",null,contacts.map(function(contact){return/*#__PURE__*/React.createElement(\"li\",{onClick:function onClick(){return setActiveContact(contact);},class:activeContact&&contact.id===activeContact.id?\"contact active\":\"contact\"},/*#__PURE__*/React.createElement(\"div\",{class:\"wrap\"},/*#__PURE__*/React.createElement(\"span\",{class:\"contact-status online\"}),/*#__PURE__*/React.createElement(\"img\",{id:contact.id,src:contact.profilePicture,alt:\"\"}),/*#__PURE__*/React.createElement(\"div\",{class:\"meta\"},/*#__PURE__*/React.createElement(\"p\",{class:\"name\"},contact.name),contact.newMessages!==undefined&&contact.newMessages>0&&/*#__PURE__*/React.createElement(\"p\",{class:\"preview\"},contact.newMessages,\" new messages\"))));}))),/*#__PURE__*/React.createElement(\"div\",{id:\"bottom-bar\"},/*#__PURE__*/React.createElement(\"button\",{id:\"addcontact\"},/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-user fa-fw\",\"aria-hidden\":\"true\"}),\" \",/*#__PURE__*/React.createElement(\"span\",null,\"Profile\")),/*#__PURE__*/React.createElement(\"button\",{id:\"settings\"},/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-cog fa-fw\",\"aria-hidden\":\"true\"}),\" \",/*#__PURE__*/React.createElement(\"span\",null,\"Settings\")))),/*#__PURE__*/React.createElement(\"div\",{class:\"content\"},/*#__PURE__*/React.createElement(\"div\",{class:\"contact-profile\"},/*#__PURE__*/React.createElement(\"img\",{src:activeContact&&activeContact.profilePicture,alt:\"\"}),/*#__PURE__*/React.createElement(\"p\",null,activeContact&&activeContact.name)),/*#__PURE__*/React.createElement(ScrollToBottom,{className:\"messages\"},/*#__PURE__*/React.createElement(\"ul\",null,messages.map(function(msg){return/*#__PURE__*/React.createElement(\"li\",{class:msg.senderId===currentUser.id?\"sent\":\"replies\"},msg.senderId!==currentUser.id&&/*#__PURE__*/React.createElement(\"img\",{src:activeContact.profilePicture,alt:\"\"}),/*#__PURE__*/React.createElement(\"p\",null,msg.content));}))),/*#__PURE__*/React.createElement(\"div\",{class:\"message-input\"},/*#__PURE__*/React.createElement(\"div\",{class:\"wrap\"},/*#__PURE__*/React.createElement(\"input\",{name:\"user_input\",size:\"large\",placeholder:\"Write your message...\",value:text,onChange:function onChange(event){return setText(event.target.value);},onKeyPress:function onKeyPress(event){if(event.key===\"Enter\"){sendMessage(text);setText(\"\");}}}),/*#__PURE__*/React.createElement(Button,{icon:/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-paper-plane\",\"aria-hidden\":\"true\"}),onClick:function onClick(){sendMessage(text);setText(\"\");}})))));};export default Chat;","map":{"version":3,"sources":["/home/abel/Desktop/practice/chat/One-to-One-WebSockets-Chat-master/jwt-social-login-client/src/chat/Chat.js"],"names":["React","useEffect","useState","Button","message","getUsers","countNewMessages","findChatMessages","findChatMessage","useRecoilValue","useRecoilState","loggedInUser","chatActiveContact","chatMessages","ScrollToBottom","stompClient","Chat","props","currentUser","text","setText","contacts","setContacts","activeContact","setActiveContact","messages","setMessages","localStorage","getItem","history","push","connect","loadContacts","undefined","id","then","msgs","Stomp","require","SockJS","over","onConnected","onError","console","log","subscribe","onMessageReceived","err","msg","notification","JSON","parse","body","active","sessionStorage","senderId","newMessages","info","senderName","sendMessage","trim","recipientId","name","recipientName","content","timestamp","Date","send","stringify","promise","users","map","contact","count","promises","Promise","all","length","profilePicture","event","target","value","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, message } from \"antd\";\nimport {\n  getUsers,\n  countNewMessages,\n  findChatMessages,\n  findChatMessage,\n} from \"../util/ApiUtil\";\nimport { useRecoilValue, useRecoilState } from \"recoil\";\nimport {\n  loggedInUser,\n  chatActiveContact,\n  chatMessages,\n} from \"../atom/globalState\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\nimport \"./Chat.css\";\n\nvar stompClient = null;\nconst Chat = (props) => {\n  const currentUser = useRecoilValue(loggedInUser);\n  const [text, setText] = useState(\"\");\n  const [contacts, setContacts] = useState([]);\n  const [activeContact, setActiveContact] = useRecoilState(chatActiveContact);\n  const [messages, setMessages] = useRecoilState(chatMessages);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"accessToken\") === null) {\n      props.history.push(\"/login\");\n    }\n    connect();\n    loadContacts();\n  }, []);\n\n  useEffect(() => {\n    if (activeContact === undefined) return;\n    findChatMessages(activeContact.id, currentUser.id).then((msgs) =>\n      setMessages(msgs)\n    );\n    loadContacts();\n  }, [activeContact]);\n\n  const connect = () => {\n    const Stomp = require(\"stompjs\");\n    var SockJS = require(\"sockjs-client\");\n    SockJS = new SockJS(\"http://localhost:8080/ws\");\n    stompClient = Stomp.over(SockJS);\n    stompClient.connect({}, onConnected, onError);\n  };\n\n  const onConnected = () => {\n    console.log(\"connected\");\n    console.log(currentUser);\n    stompClient.subscribe(\n      \"/user/\" + currentUser.id + \"/queue/messages\",\n      onMessageReceived\n    );\n  };\n\n  const onError = (err) => {\n    console.log(err);\n  };\n\n  const onMessageReceived = (msg) => {\n    const notification = JSON.parse(msg.body);\n    const active = JSON.parse(sessionStorage.getItem(\"recoil-persist\"))\n      .chatActiveContact;\n\n    if (active.id === notification.senderId) {\n      findChatMessage(notification.id).then((message) => {\n        const newMessages = JSON.parse(sessionStorage.getItem(\"recoil-persist\"))\n          .chatMessages;\n        newMessages.push(message);\n        setMessages(newMessages);\n      });\n    } else {\n      message.info(\"Received a new message from \" + notification.senderName);\n    }\n    loadContacts();\n  };\n\n  const sendMessage = (msg) => {\n    if (msg.trim() !== \"\") {\n      const message = {\n        senderId: currentUser.id,\n        recipientId: activeContact.id,\n        senderName: currentUser.name,\n        recipientName: activeContact.name,\n        content: msg,\n        timestamp: new Date(),\n      };\n      stompClient.send(\"/app/chat\", {}, JSON.stringify(message));\n\n      const newMessages = [...messages];\n      newMessages.push(message);\n      setMessages(newMessages);\n    }\n  };\n\n  const loadContacts = () => {\n    const promise = getUsers().then((users) =>\n      users.map((contact) =>\n        countNewMessages(contact.id, currentUser.id).then((count) => {\n          contact.newMessages = count;\n          return contact;\n        })\n      )\n    );\n\n    promise.then((promises) =>\n      Promise.all(promises).then((users) => {\n        setContacts(users);\n        if (activeContact === undefined && users.length > 0) {\n          setActiveContact(users[0]);\n        }\n      })\n    );\n  };\n\n  return (\n    <div id=\"frame\">\n      <div id=\"sidepanel\">\n        <div id=\"profile\">\n          <div class=\"wrap\">\n            <img\n              id=\"profile-img\"\n              src={currentUser.profilePicture}\n              class=\"online\"\n              alt=\"\"\n            />\n            <p>{currentUser.name}</p>\n            <div id=\"status-options\">\n              <ul>\n                <li id=\"status-online\" class=\"active\">\n                  <span class=\"status-circle\"></span> <p>Online</p>\n                </li>\n                <li id=\"status-away\">\n                  <span class=\"status-circle\"></span> <p>Away</p>\n                </li>\n                <li id=\"status-busy\">\n                  <span class=\"status-circle\"></span> <p>Busy</p>\n                </li>\n                <li id=\"status-offline\">\n                  <span class=\"status-circle\"></span> <p>Offline</p>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <div id=\"search\" />\n        <div id=\"contacts\">\n          <ul>\n            {contacts.map((contact) => (\n              <li\n                onClick={() => setActiveContact(contact)}\n                class={\n                  activeContact && contact.id === activeContact.id\n                    ? \"contact active\"\n                    : \"contact\"\n                }\n              >\n                <div class=\"wrap\">\n                  <span class=\"contact-status online\"></span>\n                  <img id={contact.id} src={contact.profilePicture} alt=\"\" />\n                  <div class=\"meta\">\n                    <p class=\"name\">{contact.name}</p>\n                    {contact.newMessages !== undefined &&\n                      contact.newMessages > 0 && (\n                        <p class=\"preview\">\n                          {contact.newMessages} new messages\n                        </p>\n                      )}\n                  </div>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div id=\"bottom-bar\">\n          <button id=\"addcontact\">\n            <i class=\"fa fa-user fa-fw\" aria-hidden=\"true\"></i>{\" \"}\n            <span>Profile</span>\n          </button>\n          <button id=\"settings\">\n            <i class=\"fa fa-cog fa-fw\" aria-hidden=\"true\"></i>{\" \"}\n            <span>Settings</span>\n          </button>\n        </div>\n      </div>\n      <div class=\"content\">\n        <div class=\"contact-profile\">\n          <img src={activeContact && activeContact.profilePicture} alt=\"\" />\n          <p>{activeContact && activeContact.name}</p>\n        </div>\n        <ScrollToBottom className=\"messages\">\n          <ul>\n            {messages.map((msg) => (\n              <li class={msg.senderId === currentUser.id ? \"sent\" : \"replies\"}>\n                {msg.senderId !== currentUser.id && (\n                  <img src={activeContact.profilePicture} alt=\"\" />\n                )}\n                <p>{msg.content}</p>\n              </li>\n            ))}\n          </ul>\n        </ScrollToBottom>\n        <div class=\"message-input\">\n          <div class=\"wrap\">\n            <input\n              name=\"user_input\"\n              size=\"large\"\n              placeholder=\"Write your message...\"\n              value={text}\n              onChange={(event) => setText(event.target.value)}\n              onKeyPress={(event) => {\n                if (event.key === \"Enter\") {\n                  sendMessage(text);\n                  setText(\"\");\n                }\n              }}\n            />\n\n            <Button\n              icon={<i class=\"fa fa-paper-plane\" aria-hidden=\"true\"></i>}\n              onClick={() => {\n                sendMessage(text);\n                setText(\"\");\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}