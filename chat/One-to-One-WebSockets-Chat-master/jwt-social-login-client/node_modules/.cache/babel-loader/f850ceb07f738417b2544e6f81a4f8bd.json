{"ast":null,"code":"var AUTH_SERVICE=\"http://localhost:8081\";var CHAT_SERVICE=\"http://localhost:8080\";var request=function request(options){var headers=new Headers();if(options.setContentType!==false){headers.append(\"Content-Type\",\"application/json\");}if(localStorage.getItem(\"accessToken\")){headers.append(\"Authorization\",\"Bearer \"+localStorage.getItem(\"accessToken\"));}var defaults={headers:headers};options=Object.assign({},defaults,options);return fetch(options.url,options).then(function(response){return response.json().then(function(json){if(!response.ok){return Promise.reject(json);}return json;});});};export function login(loginRequest){return request({url:AUTH_SERVICE+\"/signin\",method:\"POST\",body:JSON.stringify(loginRequest)});}export function facebookLogin(facebookLoginRequest){return request({url:AUTH_SERVICE+\"/facebook/signin\",method:\"POST\",body:JSON.stringify(facebookLoginRequest)});}export function signup(signupRequest){return request({url:AUTH_SERVICE+\"/users\",method:\"POST\",body:JSON.stringify(signupRequest)});}export function getCurrentUser(){if(!localStorage.getItem(\"accessToken\")){return Promise.reject(\"No access token set.\");}return request({url:AUTH_SERVICE+\"/users/me\",method:\"GET\"});}export function getUsers(){if(!localStorage.getItem(\"accessToken\")){return Promise.reject(\"No access token set.\");}return request({url:AUTH_SERVICE+\"/users/summaries\",method:\"GET\"});}export function countNewMessages(senderId,recipientId){if(!localStorage.getItem(\"accessToken\")){return Promise.reject(\"No access token set.\");}return request({url:CHAT_SERVICE+\"/messages/\"+senderId+\"/\"+recipientId+\"/count\",method:\"GET\"});}export function findChatMessages(senderId,recipientId){if(!localStorage.getItem(\"accessToken\")){return Promise.reject(\"No access token set.\");}return request({url:CHAT_SERVICE+\"/messages/\"+senderId+\"/\"+recipientId,method:\"GET\"});}export function findChatMessage(id){if(!localStorage.getItem(\"accessToken\")){return Promise.reject(\"No access token set.\");}return request({url:CHAT_SERVICE+\"/messages/\"+id,method:\"GET\"});}","map":{"version":3,"sources":["/home/abel/Desktop/practice/chat/One-to-One-WebSockets-Chat-master/jwt-social-login-client/src/util/ApiUtil.js"],"names":["AUTH_SERVICE","CHAT_SERVICE","request","options","headers","Headers","setContentType","append","localStorage","getItem","defaults","Object","assign","fetch","url","then","response","json","ok","Promise","reject","login","loginRequest","method","body","JSON","stringify","facebookLogin","facebookLoginRequest","signup","signupRequest","getCurrentUser","getUsers","countNewMessages","senderId","recipientId","findChatMessages","findChatMessage","id"],"mappings":"AAAA,GAAMA,CAAAA,YAAY,CAAG,uBAArB,CACA,GAAMC,CAAAA,YAAY,CAAG,uBAArB,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,OAAD,CAAa,CAC3B,GAAMC,CAAAA,OAAO,CAAG,GAAIC,CAAAA,OAAJ,EAAhB,CAEA,GAAIF,OAAO,CAACG,cAAR,GAA2B,KAA/B,CAAsC,CACpCF,OAAO,CAACG,MAAR,CAAe,cAAf,CAA+B,kBAA/B,EACD,CAED,GAAIC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAJ,CAAyC,CACvCL,OAAO,CAACG,MAAR,CACE,eADF,CAEE,UAAYC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAFd,EAID,CAED,GAAMC,CAAAA,QAAQ,CAAG,CAAEN,OAAO,CAAEA,OAAX,CAAjB,CACAD,OAAO,CAAGQ,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBF,QAAlB,CAA4BP,OAA5B,CAAV,CAEA,MAAOU,CAAAA,KAAK,CAACV,OAAO,CAACW,GAAT,CAAcX,OAAd,CAAL,CAA4BY,IAA5B,CAAiC,SAACC,QAAD,QACtCA,CAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqB,SAACE,IAAD,CAAU,CAC7B,GAAI,CAACD,QAAQ,CAACE,EAAd,CAAkB,CAChB,MAAOC,CAAAA,OAAO,CAACC,MAAR,CAAeH,IAAf,CAAP,CACD,CACD,MAAOA,CAAAA,IAAP,CACD,CALD,CADsC,EAAjC,CAAP,CAQD,CAzBD,CA2BA,MAAO,SAASI,CAAAA,KAAT,CAAeC,YAAf,CAA6B,CAClC,MAAOpB,CAAAA,OAAO,CAAC,CACbY,GAAG,CAAEd,YAAY,CAAG,SADP,CAEbuB,MAAM,CAAE,MAFK,CAGbC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeJ,YAAf,CAHO,CAAD,CAAd,CAKD,CAED,MAAO,SAASK,CAAAA,aAAT,CAAuBC,oBAAvB,CAA6C,CAClD,MAAO1B,CAAAA,OAAO,CAAC,CACbY,GAAG,CAAEd,YAAY,CAAG,kBADP,CAEbuB,MAAM,CAAE,MAFK,CAGbC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeE,oBAAf,CAHO,CAAD,CAAd,CAKD,CAED,MAAO,SAASC,CAAAA,MAAT,CAAgBC,aAAhB,CAA+B,CACpC,MAAO5B,CAAAA,OAAO,CAAC,CACbY,GAAG,CAAEd,YAAY,CAAG,QADP,CAEbuB,MAAM,CAAE,MAFK,CAGbC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeI,aAAf,CAHO,CAAD,CAAd,CAKD,CAED,MAAO,SAASC,CAAAA,cAAT,EAA0B,CAC/B,GAAI,CAACvB,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAL,CAA0C,CACxC,MAAOU,CAAAA,OAAO,CAACC,MAAR,CAAe,sBAAf,CAAP,CACD,CAED,MAAOlB,CAAAA,OAAO,CAAC,CACbY,GAAG,CAAEd,YAAY,CAAG,WADP,CAEbuB,MAAM,CAAE,KAFK,CAAD,CAAd,CAID,CAED,MAAO,SAASS,CAAAA,QAAT,EAAoB,CACzB,GAAI,CAACxB,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAL,CAA0C,CACxC,MAAOU,CAAAA,OAAO,CAACC,MAAR,CAAe,sBAAf,CAAP,CACD,CAED,MAAOlB,CAAAA,OAAO,CAAC,CACbY,GAAG,CAAEd,YAAY,CAAG,kBADP,CAEbuB,MAAM,CAAE,KAFK,CAAD,CAAd,CAID,CAED,MAAO,SAASU,CAAAA,gBAAT,CAA0BC,QAA1B,CAAoCC,WAApC,CAAiD,CACtD,GAAI,CAAC3B,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAL,CAA0C,CACxC,MAAOU,CAAAA,OAAO,CAACC,MAAR,CAAe,sBAAf,CAAP,CACD,CAED,MAAOlB,CAAAA,OAAO,CAAC,CACbY,GAAG,CAAEb,YAAY,CAAG,YAAf,CAA8BiC,QAA9B,CAAyC,GAAzC,CAA+CC,WAA/C,CAA6D,QADrD,CAEbZ,MAAM,CAAE,KAFK,CAAD,CAAd,CAID,CAED,MAAO,SAASa,CAAAA,gBAAT,CAA0BF,QAA1B,CAAoCC,WAApC,CAAiD,CACtD,GAAI,CAAC3B,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAL,CAA0C,CACxC,MAAOU,CAAAA,OAAO,CAACC,MAAR,CAAe,sBAAf,CAAP,CACD,CAED,MAAOlB,CAAAA,OAAO,CAAC,CACbY,GAAG,CAAEb,YAAY,CAAG,YAAf,CAA8BiC,QAA9B,CAAyC,GAAzC,CAA+CC,WADvC,CAEbZ,MAAM,CAAE,KAFK,CAAD,CAAd,CAID,CAED,MAAO,SAASc,CAAAA,eAAT,CAAyBC,EAAzB,CAA6B,CAClC,GAAI,CAAC9B,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAL,CAA0C,CACxC,MAAOU,CAAAA,OAAO,CAACC,MAAR,CAAe,sBAAf,CAAP,CACD,CAED,MAAOlB,CAAAA,OAAO,CAAC,CACbY,GAAG,CAAEb,YAAY,CAAG,YAAf,CAA8BqC,EADtB,CAEbf,MAAM,CAAE,KAFK,CAAD,CAAd,CAID","sourcesContent":["const AUTH_SERVICE = \"http://localhost:8081\";\nconst CHAT_SERVICE = \"http://localhost:8080\";\n\nconst request = (options) => {\n  const headers = new Headers();\n\n  if (options.setContentType !== false) {\n    headers.append(\"Content-Type\", \"application/json\");\n  }\n\n  if (localStorage.getItem(\"accessToken\")) {\n    headers.append(\n      \"Authorization\",\n      \"Bearer \" + localStorage.getItem(\"accessToken\")\n    );\n  }\n\n  const defaults = { headers: headers };\n  options = Object.assign({}, defaults, options);\n\n  return fetch(options.url, options).then((response) =>\n    response.json().then((json) => {\n      if (!response.ok) {\n        return Promise.reject(json);\n      }\n      return json;\n    })\n  );\n};\n\nexport function login(loginRequest) {\n  return request({\n    url: AUTH_SERVICE + \"/signin\",\n    method: \"POST\",\n    body: JSON.stringify(loginRequest),\n  });\n}\n\nexport function facebookLogin(facebookLoginRequest) {\n  return request({\n    url: AUTH_SERVICE + \"/facebook/signin\",\n    method: \"POST\",\n    body: JSON.stringify(facebookLoginRequest),\n  });\n}\n\nexport function signup(signupRequest) {\n  return request({\n    url: AUTH_SERVICE + \"/users\",\n    method: \"POST\",\n    body: JSON.stringify(signupRequest),\n  });\n}\n\nexport function getCurrentUser() {\n  if (!localStorage.getItem(\"accessToken\")) {\n    return Promise.reject(\"No access token set.\");\n  }\n\n  return request({\n    url: AUTH_SERVICE + \"/users/me\",\n    method: \"GET\",\n  });\n}\n\nexport function getUsers() {\n  if (!localStorage.getItem(\"accessToken\")) {\n    return Promise.reject(\"No access token set.\");\n  }\n\n  return request({\n    url: AUTH_SERVICE + \"/users/summaries\",\n    method: \"GET\",\n  });\n}\n\nexport function countNewMessages(senderId, recipientId) {\n  if (!localStorage.getItem(\"accessToken\")) {\n    return Promise.reject(\"No access token set.\");\n  }\n\n  return request({\n    url: CHAT_SERVICE + \"/messages/\" + senderId + \"/\" + recipientId + \"/count\",\n    method: \"GET\",\n  });\n}\n\nexport function findChatMessages(senderId, recipientId) {\n  if (!localStorage.getItem(\"accessToken\")) {\n    return Promise.reject(\"No access token set.\");\n  }\n\n  return request({\n    url: CHAT_SERVICE + \"/messages/\" + senderId + \"/\" + recipientId,\n    method: \"GET\",\n  });\n}\n\nexport function findChatMessage(id) {\n  if (!localStorage.getItem(\"accessToken\")) {\n    return Promise.reject(\"No access token set.\");\n  }\n\n  return request({\n    url: CHAT_SERVICE + \"/messages/\" + id,\n    method: \"GET\",\n  });\n}\n"]},"metadata":{},"sourceType":"module"}