{"ast":null,"code":"import _slicedToArray from\"/home/abel/Desktop/practice/chat/One-to-One-WebSockets-Chat-master/jwt-social-login-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{Form,Input,Button,notification}from\"antd\";import{DingtalkOutlined}from\"@ant-design/icons\";import{signup}from\"../util/ApiUtil\";import\"./Signup.css\";var Signup=function Signup(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];useEffect(function(){if(localStorage.getItem(\"accessToken\")!==null){props.history.push(\"/\");}},[]);var onFinish=function onFinish(values){setLoading(true);signup(values).then(function(response){notification.success({message:\"Success\",description:\"Thank you! You're successfully registered. Please Login to continue!\"});props.history.push(\"/login\");setLoading(false);}).catch(function(error){notification.error({message:\"Error\",description:error.message||\"Sorry! Something went wrong. Please try again!\"});setLoading(false);});};return/*#__PURE__*/React.createElement(\"div\",{className:\"login-container\"},/*#__PURE__*/React.createElement(DingtalkOutlined,{style:{fontSize:50}}),/*#__PURE__*/React.createElement(Form,{name:\"normal_login\",className:\"login-form\",initialValues:{remember:true},onFinish:onFinish},/*#__PURE__*/React.createElement(Form.Item,{name:\"name\",rules:[{required:true,message:\"Please input your name!\"}]},/*#__PURE__*/React.createElement(Input,{size:\"large\",placeholder:\"Name\"})),/*#__PURE__*/React.createElement(Form.Item,{name:\"username\",rules:[{required:true,message:\"Please input your Username!\"}]},/*#__PURE__*/React.createElement(Input,{size:\"large\",placeholder:\"Username\"})),/*#__PURE__*/React.createElement(Form.Item,{name:\"email\",rules:[{required:true,message:\"Please input your email!\"}]},/*#__PURE__*/React.createElement(Input,{size:\"large\",placeholder:\"Email\"})),/*#__PURE__*/React.createElement(Form.Item,{name:\"password\",rules:[{required:true,message:\"Please input your Password!\"}]},/*#__PURE__*/React.createElement(Input,{size:\"large\",type:\"password\",placeholder:\"Password\"})),/*#__PURE__*/React.createElement(Form.Item,{name:\"profilePicUrl\",rules:[{required:true,message:\"Please input your profile picture URL!\"}]},/*#__PURE__*/React.createElement(Input,{size:\"large\",placeholder:\"Profile picture url\"})),/*#__PURE__*/React.createElement(Form.Item,null,/*#__PURE__*/React.createElement(Button,{shape:\"round\",size:\"large\",htmlType:\"submit\",className:\"login-form-button\",loading:loading},\"Signup\")),\"Already a member? \",/*#__PURE__*/React.createElement(\"a\",{href:\"/login\"},\"Log in\")));};export default Signup;","map":{"version":3,"sources":["/home/abel/Desktop/practice/chat/One-to-One-WebSockets-Chat-master/jwt-social-login-client/src/signup/Signup.js"],"names":["React","useEffect","useState","Form","Input","Button","notification","DingtalkOutlined","signup","Signup","props","loading","setLoading","localStorage","getItem","history","push","onFinish","values","then","response","success","message","description","catch","error","fontSize","remember","required"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Form, Input, Button, notification } from \"antd\";\nimport { DingtalkOutlined } from \"@ant-design/icons\";\nimport { signup } from \"../util/ApiUtil\";\nimport \"./Signup.css\";\n\nconst Signup = (props) => {\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"accessToken\") !== null) {\n      props.history.push(\"/\");\n    }\n  }, []);\n\n  const onFinish = (values) => {\n    setLoading(true);\n    signup(values)\n      .then((response) => {\n        notification.success({\n          message: \"Success\",\n          description:\n            \"Thank you! You're successfully registered. Please Login to continue!\",\n        });\n        props.history.push(\"/login\");\n        setLoading(false);\n      })\n      .catch((error) => {\n        notification.error({\n          message: \"Error\",\n          description:\n            error.message || \"Sorry! Something went wrong. Please try again!\",\n        });\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div className=\"login-container\">\n      <DingtalkOutlined style={{ fontSize: 50 }} />\n      <Form\n        name=\"normal_login\"\n        className=\"login-form\"\n        initialValues={{ remember: true }}\n        onFinish={onFinish}\n      >\n        <Form.Item\n          name=\"name\"\n          rules={[{ required: true, message: \"Please input your name!\" }]}\n        >\n          <Input size=\"large\" placeholder=\"Name\" />\n        </Form.Item>\n        <Form.Item\n          name=\"username\"\n          rules={[{ required: true, message: \"Please input your Username!\" }]}\n        >\n          <Input size=\"large\" placeholder=\"Username\" />\n        </Form.Item>\n        <Form.Item\n          name=\"email\"\n          rules={[{ required: true, message: \"Please input your email!\" }]}\n        >\n          <Input size=\"large\" placeholder=\"Email\" />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          rules={[{ required: true, message: \"Please input your Password!\" }]}\n        >\n          <Input size=\"large\" type=\"password\" placeholder=\"Password\" />\n        </Form.Item>\n        <Form.Item\n          name=\"profilePicUrl\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your profile picture URL!\",\n            },\n          ]}\n        >\n          <Input size=\"large\" placeholder=\"Profile picture url\" />\n        </Form.Item>\n        <Form.Item>\n          <Button\n            shape=\"round\"\n            size=\"large\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n            loading={loading}\n          >\n            Signup\n          </Button>\n        </Form.Item>\n        Already a member? <a href=\"/login\">Log in</a>\n      </Form>\n    </div>\n  );\n};\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}