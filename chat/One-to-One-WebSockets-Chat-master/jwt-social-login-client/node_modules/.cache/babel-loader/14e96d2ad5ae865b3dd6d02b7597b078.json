{"ast":null,"code":"var _jsxFileName = \"/home/abel/Desktop/practice/chat/One-to-One-WebSockets-Chat-master/jwt-social-login-client/src/chat/Chat.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, message } from \"antd\";\nimport { getUsers, countNewMessages, findChatMessages, findChatMessage } from \"../util/ApiUtil\";\nimport { useRecoilValue, useRecoilState } from \"recoil\";\nimport { loggedInUser, chatActiveContact, chatMessages } from \"../atom/globalState\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\nimport \"./Chat.css\";\nvar stompClient = null;\n\nconst Chat = props => {\n  const currentUser = useRecoilValue(loggedInUser);\n  const [text, setText] = useState(\"\");\n  const [contacts, setContacts] = useState([]);\n  const [activeContact, setActiveContact] = useRecoilState(chatActiveContact);\n  const [messages, setMessages] = useRecoilState(chatMessages);\n  useEffect(() => {\n    if (localStorage.getItem(\"accessToken\") === null) {\n      props.history.push(\"/login\");\n    }\n\n    connect();\n    loadContacts();\n  }, []);\n  useEffect(() => {\n    if (activeContact === undefined) return;\n    findChatMessages(activeContact.id, currentUser.id).then(msgs => setMessages(msgs));\n    loadContacts();\n  }, [this.activeContact]);\n\n  const connect = () => {\n    const Stomp = require(\"stompjs\");\n\n    var SockJS = require(\"sockjs-client\");\n\n    SockJS = new SockJS(\"http://localhost:8080/ws\");\n    stompClient = Stomp.over(SockJS);\n    stompClient.connect({}, onConnected, onError);\n  };\n\n  const onConnected = () => {\n    console.log(\"connected\");\n    console.log(currentUser);\n    stompClient.subscribe(\"/user/\" + currentUser.id + \"/queue/messages\", onMessageReceived);\n  };\n\n  const onError = err => {\n    console.log(err);\n  };\n\n  const onMessageReceived = msg => {\n    const notification = JSON.parse(msg.body);\n    const active = JSON.parse(sessionStorage.getItem(\"recoil-persist\")).chatActiveContact;\n\n    if (active.id === notification.senderId) {\n      findChatMessage(notification.id).then(message => {\n        const newMessages = JSON.parse(sessionStorage.getItem(\"recoil-persist\")).chatMessages;\n        newMessages.push(message);\n        setMessages(newMessages);\n      });\n    } else {\n      message.info(\"Received a new message from \" + notification.senderName);\n    }\n\n    loadContacts();\n  };\n\n  const sendMessage = msg => {\n    if (msg.trim() !== \"\") {\n      const message = {\n        senderId: currentUser.id,\n        recipientId: activeContact.id,\n        senderName: currentUser.name,\n        recipientName: activeContact.name,\n        content: msg,\n        timestamp: new Date()\n      };\n      stompClient.send(\"/app/chat\", {}, JSON.stringify(message));\n      const newMessages = [...messages];\n      newMessages.push(message);\n      setMessages(newMessages);\n    }\n  };\n\n  const loadContacts = () => {\n    const promise = getUsers().then(users => users.map(contact => countNewMessages(contact.id, currentUser.id).then(count => {\n      contact.newMessages = count;\n      return contact;\n    })));\n    promise.then(promises => Promise.all(promises).then(users => {\n      setContacts(users);\n\n      if (activeContact === undefined && users.length > 0) {\n        setActiveContact(users[0]);\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"frame\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"sidepanel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    id: \"profile-img\",\n    src: currentUser.profilePicture,\n    class: \"online\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, currentUser.name), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"status-options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    id: \"status-online\",\n    class: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    class: \"status-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 55\n    }\n  }, \"Online\")), /*#__PURE__*/React.createElement(\"li\", {\n    id: \"status-away\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    class: \"status-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 19\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 55\n    }\n  }, \"Away\")), /*#__PURE__*/React.createElement(\"li\", {\n    id: \"status-busy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    class: \"status-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 19\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 55\n    }\n  }, \"Busy\")), /*#__PURE__*/React.createElement(\"li\", {\n    id: \"status-offline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    class: \"status-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 19\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 55\n    }\n  }, \"Offline\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"contacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, contacts.map(contact => /*#__PURE__*/React.createElement(\"li\", {\n    onClick: () => setActiveContact(contact),\n    class: activeContact && contact.id === activeContact.id ? \"contact active\" : \"contact\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    class: \"contact-status online\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    id: contact.id,\n    src: contact.profilePicture,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"meta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    class: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }, contact.name), contact.newMessages !== undefined && contact.newMessages > 0 && /*#__PURE__*/React.createElement(\"p\", {\n    class: \"preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 25\n    }\n  }, contact.newMessages, \" new messages\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"bottom-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"addcontact\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fa fa-user fa-fw\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, \"Profile\")), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fa fa-cog fa-fw\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, \"Settings\")))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"contact-profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: activeContact && activeContact.profilePicture,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, activeContact && activeContact.name)), /*#__PURE__*/React.createElement(ScrollToBottom, {\n    className: \"messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, messages.map(msg => /*#__PURE__*/React.createElement(\"li\", {\n    class: msg.senderId === currentUser.id ? \"sent\" : \"replies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, msg.senderId !== currentUser.id && /*#__PURE__*/React.createElement(\"img\", {\n    src: activeContact.profilePicture,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, msg.content))))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"message-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"user_input\",\n    size: \"large\",\n    placeholder: \"Write your message...\",\n    value: text,\n    onChange: event => setText(event.target.value),\n    onKeyPress: event => {\n      if (event.key === \"Enter\") {\n        sendMessage(text);\n        setText(\"\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    icon: /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-paper-plane\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }\n    }),\n    onClick: () => {\n      sendMessage(text);\n      setText(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/home/abel/Desktop/practice/chat/One-to-One-WebSockets-Chat-master/jwt-social-login-client/src/chat/Chat.js"],"names":["React","useEffect","useState","Button","message","getUsers","countNewMessages","findChatMessages","findChatMessage","useRecoilValue","useRecoilState","loggedInUser","chatActiveContact","chatMessages","ScrollToBottom","stompClient","Chat","props","currentUser","text","setText","contacts","setContacts","activeContact","setActiveContact","messages","setMessages","localStorage","getItem","history","push","connect","loadContacts","undefined","id","then","msgs","Stomp","require","SockJS","over","onConnected","onError","console","log","subscribe","onMessageReceived","err","msg","notification","JSON","parse","body","active","sessionStorage","senderId","newMessages","info","senderName","sendMessage","trim","recipientId","name","recipientName","content","timestamp","Date","send","stringify","promise","users","map","contact","count","promises","Promise","all","length","profilePicture","event","target","value","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, message } from \"antd\";\nimport {\n  getUsers,\n  countNewMessages,\n  findChatMessages,\n  findChatMessage,\n} from \"../util/ApiUtil\";\nimport { useRecoilValue, useRecoilState } from \"recoil\";\nimport {\n  loggedInUser,\n  chatActiveContact,\n  chatMessages,\n} from \"../atom/globalState\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\nimport \"./Chat.css\";\n\nvar stompClient = null;\nconst Chat = (props) => {\n  const currentUser = useRecoilValue(loggedInUser);\n  const [text, setText] = useState(\"\");\n  const [contacts, setContacts] = useState([]);\n  const [activeContact, setActiveContact] = useRecoilState(chatActiveContact);\n  const [messages, setMessages] = useRecoilState(chatMessages);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"accessToken\") === null) {\n      props.history.push(\"/login\");\n    }\n    connect();\n    loadContacts();\n  }, []);\n\n  useEffect(() => {\n    if (activeContact === undefined) return;\n    findChatMessages(activeContact.id, currentUser.id).then((msgs) =>\n      setMessages(msgs)\n    );\n    loadContacts();\n  }, [this.activeContact]);\n\n  const connect = () => {\n    const Stomp = require(\"stompjs\");\n    var SockJS = require(\"sockjs-client\");\n    SockJS = new SockJS(\"http://localhost:8080/ws\");\n    stompClient = Stomp.over(SockJS);\n    stompClient.connect({}, onConnected, onError);\n  };\n\n  const onConnected = () => {\n    console.log(\"connected\");\n    console.log(currentUser);\n    stompClient.subscribe(\n      \"/user/\" + currentUser.id + \"/queue/messages\",\n      onMessageReceived\n    );\n  };\n\n  const onError = (err) => {\n    console.log(err);\n  };\n\n  const onMessageReceived = (msg) => {\n    const notification = JSON.parse(msg.body);\n    const active = JSON.parse(sessionStorage.getItem(\"recoil-persist\"))\n      .chatActiveContact;\n\n    if (active.id === notification.senderId) {\n      findChatMessage(notification.id).then((message) => {\n        const newMessages = JSON.parse(sessionStorage.getItem(\"recoil-persist\"))\n          .chatMessages;\n        newMessages.push(message);\n        setMessages(newMessages);\n      });\n    } else {\n      message.info(\"Received a new message from \" + notification.senderName);\n    }\n    loadContacts();\n  };\n\n  const sendMessage = (msg) => {\n    if (msg.trim() !== \"\") {\n      const message = {\n        senderId: currentUser.id,\n        recipientId: activeContact.id,\n        senderName: currentUser.name,\n        recipientName: activeContact.name,\n        content: msg,\n        timestamp: new Date(),\n      };\n      stompClient.send(\"/app/chat\", {}, JSON.stringify(message));\n\n      const newMessages = [...messages];\n      newMessages.push(message);\n      setMessages(newMessages);\n    }\n  };\n\n  const loadContacts = () => {\n    const promise = getUsers().then((users) =>\n      users.map((contact) =>\n        countNewMessages(contact.id, currentUser.id).then((count) => {\n          contact.newMessages = count;\n          return contact;\n        })\n      )\n    );\n\n    promise.then((promises) =>\n      Promise.all(promises).then((users) => {\n        setContacts(users);\n        if (activeContact === undefined && users.length > 0) {\n          setActiveContact(users[0]);\n        }\n      })\n    );\n  };\n\n  return (\n    <div id=\"frame\">\n      <div id=\"sidepanel\">\n        <div id=\"profile\">\n          <div class=\"wrap\">\n            <img\n              id=\"profile-img\"\n              src={currentUser.profilePicture}\n              class=\"online\"\n              alt=\"\"\n            />\n            <p>{currentUser.name}</p>\n            <div id=\"status-options\">\n              <ul>\n                <li id=\"status-online\" class=\"active\">\n                  <span class=\"status-circle\"></span> <p>Online</p>\n                </li>\n                <li id=\"status-away\">\n                  <span class=\"status-circle\"></span> <p>Away</p>\n                </li>\n                <li id=\"status-busy\">\n                  <span class=\"status-circle\"></span> <p>Busy</p>\n                </li>\n                <li id=\"status-offline\">\n                  <span class=\"status-circle\"></span> <p>Offline</p>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <div id=\"search\" />\n        <div id=\"contacts\">\n          <ul>\n            {contacts.map((contact) => (\n              <li\n                onClick={() => setActiveContact(contact)}\n                class={\n                  activeContact && contact.id === activeContact.id\n                    ? \"contact active\"\n                    : \"contact\"\n                }\n              >\n                <div class=\"wrap\">\n                  <span class=\"contact-status online\"></span>\n                  <img id={contact.id} src={contact.profilePicture} alt=\"\" />\n                  <div class=\"meta\">\n                    <p class=\"name\">{contact.name}</p>\n                    {contact.newMessages !== undefined &&\n                      contact.newMessages > 0 && (\n                        <p class=\"preview\">\n                          {contact.newMessages} new messages\n                        </p>\n                      )}\n                  </div>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div id=\"bottom-bar\">\n          <button id=\"addcontact\">\n            <i class=\"fa fa-user fa-fw\" aria-hidden=\"true\"></i>{\" \"}\n            <span>Profile</span>\n          </button>\n          <button id=\"settings\">\n            <i class=\"fa fa-cog fa-fw\" aria-hidden=\"true\"></i>{\" \"}\n            <span>Settings</span>\n          </button>\n        </div>\n      </div>\n      <div class=\"content\">\n        <div class=\"contact-profile\">\n          <img src={activeContact && activeContact.profilePicture} alt=\"\" />\n          <p>{activeContact && activeContact.name}</p>\n        </div>\n        <ScrollToBottom className=\"messages\">\n          <ul>\n            {messages.map((msg) => (\n              <li class={msg.senderId === currentUser.id ? \"sent\" : \"replies\"}>\n                {msg.senderId !== currentUser.id && (\n                  <img src={activeContact.profilePicture} alt=\"\" />\n                )}\n                <p>{msg.content}</p>\n              </li>\n            ))}\n          </ul>\n        </ScrollToBottom>\n        <div class=\"message-input\">\n          <div class=\"wrap\">\n            <input\n              name=\"user_input\"\n              size=\"large\"\n              placeholder=\"Write your message...\"\n              value={text}\n              onChange={(event) => setText(event.target.value)}\n              onKeyPress={(event) => {\n                if (event.key === \"Enter\") {\n                  sendMessage(text);\n                  setText(\"\");\n                }\n              }}\n            />\n\n            <Button\n              icon={<i class=\"fa fa-paper-plane\" aria-hidden=\"true\"></i>}\n              onClick={() => {\n                sendMessage(text);\n                setText(\"\");\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}